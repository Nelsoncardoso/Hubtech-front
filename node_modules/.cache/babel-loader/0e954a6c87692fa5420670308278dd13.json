{"ast":null,"code":"import _regeneratorRuntime from \"/Users/nelsoncardoso/Downloads/bootcamp-gobarber-frontend-master/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/nelsoncardoso/Downloads/bootcamp-gobarber-frontend-master/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/nelsoncardoso/Downloads/bootcamp-gobarber-frontend-master/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nelsoncardoso/Downloads/bootcamp-gobarber-frontend-master/src/pages/Dashboard/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport Moment from 'react-moment';\nimport api from \"../../services/api\";\nimport { Container, Task } from './styles';\nexport default function Dashboard() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      schedule = _useState2[0],\n      setSchedule = _useState2[1];\n\n  var _useState3 = useState(new Date()),\n      _useState4 = _slicedToArray(_useState3, 1),\n      date = _useState4[0];\n\n  useEffect(function () {\n    function loadSchedule() {\n      return _loadSchedule.apply(this, arguments);\n    }\n\n    function _loadSchedule() {\n      _loadSchedule = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _dataHeaders, response;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _dataHeaders = JSON.parse(localStorage.getItem('headers'));\n                _context.next = 3;\n                return api.get('/tasks', {\n                  headers: _dataHeaders\n                });\n\n              case 3:\n                response = _context.sent;\n                localStorage.setItem('headers', JSON.stringify(response.headers));\n                setSchedule(response.data);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _loadSchedule.apply(this, arguments);\n    }\n\n    loadSchedule();\n  }, [date]);\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"Button\",\n    onClick: function onClick() {\n      return _this.setState({\n        show: true\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"ADICIONAR TAREFA\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, schedule.map(function (task) {\n    return React.createElement(Task, {\n      key: task.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, task.name), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, task.description), React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Moment, {\n      format: \"DD/MM/YYYY\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, task.end_time)));\n  })));\n}","map":{"version":3,"sources":["/Users/nelsoncardoso/Downloads/bootcamp-gobarber-frontend-master/src/pages/Dashboard/index.js"],"names":["React","useState","useEffect","Moment","api","Container","Task","Dashboard","schedule","setSchedule","Date","date","loadSchedule","_dataHeaders","JSON","parse","localStorage","getItem","get","headers","response","setItem","stringify","data","setState","show","map","task","id","name","description","end_time"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,UAAhC;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAAA,kBAEFN,QAAQ,CAAC,EAAD,CAFN;AAAA;AAAA,MAE3BO,QAF2B;AAAA,MAEjBC,WAFiB;;AAAA,mBAGnBR,QAAQ,CAAC,IAAIS,IAAJ,EAAD,CAHW;AAAA;AAAA,MAG3BC,IAH2B;;AAKlCT,EAAAA,SAAS,CAAC,YAAM;AAAA,aACCU,YADD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,+BACd;AAAA;;AAAA;AAAA;AAAA;AAAA;AACQC,gBAAAA,YADR,GACuBC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CADvB;AAAA;AAAA,uBAEyBb,GAAG,CAACc,GAAJ,CAAQ,QAAR,EAAkB;AAACC,kBAAAA,OAAO,EAAEN;AAAV,iBAAlB,CAFzB;;AAAA;AAEQO,gBAAAA,QAFR;AAGEJ,gBAAAA,YAAY,CAACK,OAAb,CAAqB,SAArB,EAAgCP,IAAI,CAACQ,SAAL,CAAeF,QAAQ,CAACD,OAAxB,CAAhC;AACAV,gBAAAA,WAAW,CAACW,QAAQ,CAACG,IAAV,CAAX;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADc;AAAA;AAAA;;AAOdX,IAAAA,YAAY;AACb,GARQ,EAQN,CAACD,IAAD,CARM,CAAT;AAUA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE;AAAA,aAAM,KAAI,CAACa,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAd,CAAN;AAAA,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,QAAQ,CAACkB,GAAT,CAAa,UAAAC,IAAI;AAAA,WAChB,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASD,IAAI,CAACE,IAAd,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOF,IAAI,CAACG,WAAZ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BH,IAAI,CAACI,QAAlC,CADF,CAHF,CADgB;AAAA,GAAjB,CADH,CAHF,CADF;AAiBD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Moment from 'react-moment';\n\nimport api from '~/services/api';\n\nimport { Container, Task } from './styles';\n\nexport default function Dashboard() {\n\n  const [schedule, setSchedule] = useState([]);\n  const [date] = useState(new Date());\n\n  useEffect(() => {\n    async function loadSchedule() {\n      const _dataHeaders = JSON.parse(localStorage.getItem('headers'));\n      const response = await api.get('/tasks', {headers: _dataHeaders});\n      localStorage.setItem('headers', JSON.stringify(response.headers));\n      setSchedule(response.data);\n    }\n    loadSchedule();\n  }, [date]);\n\n  return (\n    <Container>\n      <button type=\"Button\" onClick={() => this.setState({ show: true })}>ADICIONAR TAREFA</button>\n\n      <ul>\n        {schedule.map(task => (\n          <Task key={task.id}>\n            <strong>{task.name}</strong>\n            <span>{task.description}</span>\n            <small>\n              <Moment format=\"DD/MM/YYYY\">{task.end_time}</Moment>\n            </small>\n          </Task>\n        ))}\n      </ul>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}