{"ast":null,"code":"import _regeneratorRuntime from \"/Users/nelsoncardoso/Downloads/bootcamp-gobarber-frontend-master/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/nelsoncardoso/Downloads/bootcamp-gobarber-frontend-master/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/nelsoncardoso/Downloads/bootcamp-gobarber-frontend-master/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(updateProfile);\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport api from \"../../../services/api\";\nimport { updateProfileFailure, updateProfileSuccess } from './actions';\nexport function updateProfile(_ref) {\n  var payload, _payload$data, name, email, avatar_id, rest, profile, response;\n\n  return _regeneratorRuntime.wrap(function updateProfile$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n          return _context.abrupt(\"return\");\n\n        case 7:\n          response = _context.sent;\n          toast.success('Perfil Atualizado com sucesso!');\n          _context.next = 11;\n          return put(updateProfileSuccess(response.data));\n\n        case 11:\n          _context.next = 18;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](1);\n          toast.success('Erro ao atualizar perfil, confira seus dados!');\n          _context.next = 18;\n          return put(updateProfileFailure());\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 13]]);\n}\nexport default all([takeLatest('@user/UPDATE_PROFILE_REQUEST', updateProfile)]);","map":{"version":3,"sources":["/Users/nelsoncardoso/Downloads/bootcamp-gobarber-frontend-master/src/store/modules/user/sagas.js"],"names":["updateProfile","takeLatest","call","put","all","toast","api","updateProfileFailure","updateProfileSuccess","payload","response","success","data"],"mappings":";;;;;;yBAOiBA,a;;;;;;AAPjB,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,SAASC,oBAAT,EAA+BC,oBAA/B,QAA2D,WAA3D;AAEA,OAAO,SAAUR,aAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAA0BS,UAAAA,OAA1B,QAA0BA,OAA1B;AAAA;AAAA;;AAAA;AAcGC,UAAAA,QAdH;AAgBHL,UAAAA,KAAK,CAACM,OAAN,CAAc,gCAAd;AAhBG;AAkBH,iBAAMR,GAAG,CAACK,oBAAoB,CAACE,QAAQ,CAACE,IAAV,CAArB,CAAT;;AAlBG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAoBHP,UAAAA,KAAK,CAACM,OAAN,CAAc,+CAAd;AApBG;AAqBH,iBAAMR,GAAG,CAACI,oBAAoB,EAArB,CAAT;;AArBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBP,eAAeH,GAAG,CAAC,CAACH,UAAU,CAAC,8BAAD,EAAiCD,aAAjC,CAAX,CAAD,CAAlB","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\n\nimport api from '~/services/api';\n\nimport { updateProfileFailure, updateProfileSuccess } from './actions';\n\nexport function* updateProfile({ payload }) {\n  try {\n    return;\n    const { name, email, avatar_id, ...rest } = payload.data;\n\n    // Cria um novo objeto com os dados e somente adiciona o restante\n    // das informações do formulário se o campo oldPassword foi preenchido\n    const profile = {\n      name,\n      email,\n      avatar_id,\n      ...(rest.oldPassword ? rest : {}),\n    };\n\n    const response = yield call(api.put, 'users', profile);\n\n    toast.success('Perfil Atualizado com sucesso!');\n\n    yield put(updateProfileSuccess(response.data));\n  } catch (err) {\n    toast.success('Erro ao atualizar perfil, confira seus dados!');\n    yield put(updateProfileFailure());\n  }\n}\n\nexport default all([takeLatest('@user/UPDATE_PROFILE_REQUEST', updateProfile)]);\n"]},"metadata":{},"sourceType":"module"}