{"ast":null,"code":"import _regeneratorRuntime from \"/Users/nelsoncardoso/Downloads/bootcamp-gobarber-frontend-master/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(addTask);\n\nimport { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport api from \"../../../services/api\";\nimport { addTaskRequestSuccess, addTaskRequestFailure } from './actions';\nimport session from \"../../../helpers/session\";\nexport function addTask(_ref) {\n  var payload, data, response;\n  return _regeneratorRuntime.wrap(function addTask$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n          data = {\n            headers: session.get(),\n            data: payload.data\n          };\n          _context.next = 5;\n          return call(api.post, '/tasks', data);\n\n        case 5:\n          response = _context.sent;\n\n          if (!(response.status != 200)) {\n            _context.next = 10;\n            break;\n          }\n\n          toast.success('Erro ao cadastrar nova tarefa, tente novamente!');\n          _context.next = 10;\n          return put(addTaskRequestFailure());\n\n        case 10:\n          toast.success('Tarefa adicionada com sucesso!');\n          _context.next = 13;\n          return put(addTaskRequestSuccess(response.data));\n\n        case 13:\n          _context.next = 20;\n          break;\n\n        case 15:\n          _context.prev = 15;\n          _context.t0 = _context[\"catch\"](1);\n          toast.success('Erro ao cadastrar nova tarefa, tente novamente!');\n          _context.next = 20;\n          return put(addTaskRequestFailure());\n\n        case 20:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 15]]);\n}\nexport default all([takeLatest('@task/ADD_TASK_REQUEST', addTask)]);","map":{"version":3,"sources":["/Users/nelsoncardoso/Downloads/bootcamp-gobarber-frontend-master/src/store/modules/task/sagas.js"],"names":["addTask","takeLatest","call","put","all","toast","api","addTaskRequestSuccess","addTaskRequestFailure","session","payload","data","headers","get","post","response","status","success"],"mappings":";;;;yBAQiBA,O;;AARjB,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,SAASC,qBAAT,EAAgCC,qBAAhC,QAA6D,WAA7D;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,OAAO,SAAUT,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoBU,UAAAA,OAApB,QAAoBA,OAApB;AAAA;AAEGC,UAAAA,IAFH,GAEU;AACXC,YAAAA,OAAO,EAAEH,OAAO,CAACI,GAAR,EADE;AAEXF,YAAAA,IAAI,EAAED,OAAO,CAACC;AAFH,WAFV;AAAA;AAMc,iBAAMT,IAAI,CAACI,GAAG,CAACQ,IAAL,EAAW,QAAX,EAAqBH,IAArB,CAAV;;AANd;AAMGI,UAAAA,QANH;;AAAA,gBAOCA,QAAQ,CAACC,MAAT,IAAmB,GAPpB;AAAA;AAAA;AAAA;;AAQAX,UAAAA,KAAK,CAACY,OAAN,CAAc,iDAAd;AARA;AASA,iBAAMd,GAAG,CAACK,qBAAqB,EAAtB,CAAT;;AATA;AAWHH,UAAAA,KAAK,CAACY,OAAN,CAAc,gCAAd;AAXG;AAaH,iBAAMd,GAAG,CAACI,qBAAqB,CAACQ,QAAQ,CAACJ,IAAV,CAAtB,CAAT;;AAbG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAeHN,UAAAA,KAAK,CAACY,OAAN,CAAc,iDAAd;AAfG;AAgBH,iBAAMd,GAAG,CAACK,qBAAqB,EAAtB,CAAT;;AAhBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBP,eAAeJ,GAAG,CAAC,CAACH,UAAU,CAAC,wBAAD,EAA2BD,OAA3B,CAAX,CAAD,CAAlB","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\n\nimport api from '~/services/api';\n\nimport { addTaskRequestSuccess, addTaskRequestFailure } from './actions';\nimport session from '~/helpers/session';\n\nexport function* addTask({ payload }) {\n  try {\n    const data = {\n      headers: session.get(),\n      data: payload.data\n    };\n    const response = yield call(api.post, '/tasks', data);\n    if (response.status != 200) {\n       toast.success('Erro ao cadastrar nova tarefa, tente novamente!');\n       yield put(addTaskRequestFailure());\n    }\n    toast.success('Tarefa adicionada com sucesso!');\n\n    yield put(addTaskRequestSuccess(response.data));\n  } catch (err) {\n    toast.success('Erro ao cadastrar nova tarefa, tente novamente!');\n    yield put(addTaskRequestFailure());\n  }\n}\n\nexport default all([takeLatest('@task/ADD_TASK_REQUEST', addTask)]);\n"]},"metadata":{},"sourceType":"module"}