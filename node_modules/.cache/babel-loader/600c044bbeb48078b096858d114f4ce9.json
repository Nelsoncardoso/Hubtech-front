{"ast":null,"code":"import _regeneratorRuntime from \"/Users/nelsoncardoso/Downloads/bootcamp-gobarber-frontend-master/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(addTask);\n\nimport { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport api from \"../../../services/api\";\nimport { addTaskRequestSuccess, addTaskRequestFailure } from './actions';\nexport function addTask(_ref) {\n  var payload, response;\n  return _regeneratorRuntime.wrap(function addTask$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n          _context.next = 4;\n          return call(api.post, '/tasks', payload.data);\n\n        case 4:\n          response = _context.sent;\n          console.log(response);\n          toast.success('Tarefa adicionada com sucesso!');\n          _context.next = 9;\n          return put(addTaskRequestSuccess(response.data));\n\n        case 9:\n          _context.next = 16;\n          break;\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](1);\n          toast.success('Erro ao cadastrar nova tarefa, tente novamente!');\n          _context.next = 16;\n          return put(addTaskRequestFailure());\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 11]]);\n}\nexport default all([takeLatest('@task/ADD_TASK_REQUEST', addTask)]);","map":{"version":3,"sources":["/Users/nelsoncardoso/Downloads/bootcamp-gobarber-frontend-master/src/store/modules/task/sagas.js"],"names":["addTask","takeLatest","call","put","all","toast","api","addTaskRequestSuccess","addTaskRequestFailure","payload","post","data","response","console","log","success"],"mappings":";;;;yBAOiBA,O;;AAPjB,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,SAASC,qBAAT,EAAgCC,qBAAhC,QAA6D,WAA7D;AAEA,OAAO,SAAUR,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoBS,UAAAA,OAApB,QAAoBA,OAApB;AAAA;AAAA;AAEc,iBAAMP,IAAI,CAACI,GAAG,CAACI,IAAL,EAAW,QAAX,EAAqBD,OAAO,CAACE,IAA7B,CAAV;;AAFd;AAEGC,UAAAA,QAFH;AAGHC,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAP,UAAAA,KAAK,CAACU,OAAN,CAAc,gCAAd;AAJG;AAMH,iBAAMZ,GAAG,CAACI,qBAAqB,CAACK,QAAQ,CAACD,IAAV,CAAtB,CAAT;;AANG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQHN,UAAAA,KAAK,CAACU,OAAN,CAAc,iDAAd;AARG;AASH,iBAAMZ,GAAG,CAACK,qBAAqB,EAAtB,CAAT;;AATG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaP,eAAeJ,GAAG,CAAC,CAACH,UAAU,CAAC,wBAAD,EAA2BD,OAA3B,CAAX,CAAD,CAAlB","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\n\nimport api from '~/services/api';\n\nimport { addTaskRequestSuccess, addTaskRequestFailure } from './actions';\n\nexport function* addTask({ payload }) {\n  try {\n    const response = yield call(api.post, '/tasks', payload.data);\n    console.log(response); \n    toast.success('Tarefa adicionada com sucesso!');\n\n    yield put(addTaskRequestSuccess(response.data));\n  } catch (err) {\n    toast.success('Erro ao cadastrar nova tarefa, tente novamente!');\n    yield put(addTaskRequestFailure());\n  }\n}\n\nexport default all([takeLatest('@task/ADD_TASK_REQUEST', addTask)]);\n"]},"metadata":{},"sourceType":"module"}