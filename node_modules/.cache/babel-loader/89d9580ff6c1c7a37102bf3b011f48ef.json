{"ast":null,"code":"import _regeneratorRuntime from \"/Users/nelsoncardoso/Downloads/bootcamp-gobarber-frontend-master/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(addTask);\n\nimport { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport api from \"../../../services/api\";\nimport { addTaskRequestSuccess, addTaskRequestFailure } from './actions';\nimport session from \"../../../helpers/session\";\nexport function addTask(_ref) {\n  var payload, apiCall, data, response;\n  return _regeneratorRuntime.wrap(function addTask$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n          console.log('saga');\n\n          apiCall = function apiCall(data) {\n            return api.post('/task', data, {\n              headers: session.get()\n            });\n          };\n\n          data = {\n            headers: session.get(),\n            data: payload.data\n          };\n          _context.next = 7;\n          return call(apiCall(payload.data));\n\n        case 7:\n          response = _context.sent;\n          toast.success('Tarefa adicionada com sucesso!');\n          _context.next = 11;\n          return put(addTaskRequestSuccess(response.data));\n\n        case 11:\n          _context.next = 18;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](1);\n          toast.success('Erro ao cadastrar nova tarefa, tente novamente!');\n          _context.next = 18;\n          return put(addTaskRequestFailure());\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 13]]);\n}\nexport default all([takeLatest('@task/ADD_TASK_REQUEST', addTask)]);","map":{"version":3,"sources":["/Users/nelsoncardoso/Downloads/bootcamp-gobarber-frontend-master/src/store/modules/task/sagas.js"],"names":["addTask","takeLatest","call","put","all","toast","api","addTaskRequestSuccess","addTaskRequestFailure","session","payload","console","log","apiCall","data","post","headers","get","response","success"],"mappings":";;;;yBAQiBA,O;;AARjB,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,SAASC,qBAAT,EAAgCC,qBAAhC,QAA6D,WAA7D;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,OAAO,SAAUT,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoBU,UAAAA,OAApB,QAAoBA,OAApB;AAAA;AAEHC,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AACMC,UAAAA,OAHH,GAGa,SAAVA,OAAU,CAAAC,IAAI,EAAI;AACtB,mBAAOR,GAAG,CAACS,IAAJ,CAAS,OAAT,EAAkBD,IAAlB,EAAwB;AAC7BE,cAAAA,OAAO,EAAEP,OAAO,CAACQ,GAAR;AADoB,aAAxB,CAAP;AAGD,WAPE;;AAQGH,UAAAA,IARH,GAQU;AACXE,YAAAA,OAAO,EAAEP,OAAO,CAACQ,GAAR,EADE;AAEXH,YAAAA,IAAI,EAAEJ,OAAO,CAACI;AAFH,WARV;AAAA;AAYc,iBAAMZ,IAAI,CAACW,OAAO,CAACH,OAAO,CAACI,IAAT,CAAR,CAAV;;AAZd;AAYGI,UAAAA,QAZH;AAcHb,UAAAA,KAAK,CAACc,OAAN,CAAc,gCAAd;AAdG;AAgBH,iBAAMhB,GAAG,CAACI,qBAAqB,CAACW,QAAQ,CAACJ,IAAV,CAAtB,CAAT;;AAhBG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkBHT,UAAAA,KAAK,CAACc,OAAN,CAAc,iDAAd;AAlBG;AAmBH,iBAAMhB,GAAG,CAACK,qBAAqB,EAAtB,CAAT;;AAnBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBP,eAAeJ,GAAG,CAAC,CAACH,UAAU,CAAC,wBAAD,EAA2BD,OAA3B,CAAX,CAAD,CAAlB","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\n\nimport api from '~/services/api';\n\nimport { addTaskRequestSuccess, addTaskRequestFailure } from './actions';\nimport session from '~/helpers/session';\n\nexport function* addTask({ payload }) {\n  try {\n    console.log('saga')\n    const apiCall = data => {\n      return api.post('/task', data, {\n        headers: session.get()\n      });\n    };\n    const data = {\n      headers: session.get(),\n      data: payload.data\n    };\n    const response = yield call(apiCall(payload.data));\n\n    toast.success('Tarefa adicionada com sucesso!');\n\n    yield put(addTaskRequestSuccess(response.data));\n  } catch (err) {\n    toast.success('Erro ao cadastrar nova tarefa, tente novamente!');\n    yield put(addTaskRequestFailure());\n  }\n}\n\nexport default all([takeLatest('@task/ADD_TASK_REQUEST', addTask)]);\n"]},"metadata":{},"sourceType":"module"}