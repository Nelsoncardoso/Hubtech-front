{"ast":null,"code":"import _regeneratorRuntime from \"/Users/nelsoncardoso/Downloads/bootcamp-gobarber-frontend-master/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/nelsoncardoso/Downloads/bootcamp-gobarber-frontend-master/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/nelsoncardoso/Downloads/bootcamp-gobarber-frontend-master/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nelsoncardoso/Downloads/bootcamp-gobarber-frontend-master/src/pages/Dashboard/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport Moment from 'react-moment';\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\nimport { Link } from 'react-router-dom';\nimport { confirmAlert } from 'react-confirm-alert';\nimport api from \"../../services/api\";\nimport { Container, Task } from './styles';\nimport session from \"../../helpers/session\";\nexport default function Dashboard() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      schedule = _useState2[0],\n      setSchedule = _useState2[1];\n\n  var _useState3 = useState(new Date()),\n      _useState4 = _slicedToArray(_useState3, 1),\n      date = _useState4[0];\n\n  var deleteTask = function deleteTask(task_id) {\n    alert(task_id);\n  };\n\n  useEffect(function () {\n    function loadSchedule() {\n      return _loadSchedule.apply(this, arguments);\n    }\n\n    function _loadSchedule() {\n      _loadSchedule = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var header, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                header = {\n                  headers: session.get()\n                };\n                _context.next = 3;\n                return api.get('/tasks', header);\n\n              case 3:\n                response = _context.sent;\n                session.set(response.headers);\n                setSchedule(response.data);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _loadSchedule.apply(this, arguments);\n    }\n\n    loadSchedule();\n  }, [date]);\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/task\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"ADICIONAR TAREFA\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, schedule.map(function (task) {\n    return React.createElement(Task, {\n      key: task.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, task.name), React.createElement(\"actions\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(FaEdit, {\n      className: \"edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: deleteTask(task.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(FaTrash, {\n      className: \"delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })))), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, task.description), React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Moment, {\n      format: \"DD/MM/YYYY\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, task.end_time)));\n  })));\n}","map":{"version":3,"sources":["/Users/nelsoncardoso/Downloads/bootcamp-gobarber-frontend-master/src/pages/Dashboard/index.js"],"names":["React","useState","useEffect","Moment","FaEdit","FaTrash","Link","confirmAlert","api","Container","Task","session","Dashboard","schedule","setSchedule","Date","date","deleteTask","task_id","alert","loadSchedule","header","headers","get","response","set","data","map","task","id","name","description","end_time"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,gBAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AAEA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,UAAhC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA,kBAEFX,QAAQ,CAAC,EAAD,CAFN;AAAA;AAAA,MAE3BY,QAF2B;AAAA,MAEjBC,WAFiB;;AAAA,mBAGnBb,QAAQ,CAAC,IAAIc,IAAJ,EAAD,CAHW;AAAA;AAAA,MAG3BC,IAH2B;;AAIlC,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,OAAO,EAAI;AAC5BC,IAAAA,KAAK,CAACD,OAAD,CAAL;AACD,GAFD;;AAGAhB,EAAAA,SAAS,CAAC,YAAM;AAAA,aACCkB,YADD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,+BACd;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,gBAAAA,MADR,GACiB;AACbC,kBAAAA,OAAO,EAAEX,OAAO,CAACY,GAAR;AADI,iBADjB;AAAA;AAAA,uBAIyBf,GAAG,CAACe,GAAJ,CAAQ,QAAR,EAAkBF,MAAlB,CAJzB;;AAAA;AAIQG,gBAAAA,QAJR;AAKEb,gBAAAA,OAAO,CAACc,GAAR,CAAYD,QAAQ,CAACF,OAArB;AACAR,gBAAAA,WAAW,CAACU,QAAQ,CAACE,IAAV,CAAX;;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADc;AAAA;AAAA;;AASdN,IAAAA,YAAY;AACb,GAVQ,EAUN,CAACJ,IAAD,CAVM,CAAT;AAYA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QAAQ,CAACc,GAAT,CAAa,UAAAC,IAAI;AAAA,WAChB,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQD,IAAI,CAACE,IAAb,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEb,UAAU,CAACW,IAAI,CAACC,EAAN,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CAFF,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOD,IAAI,CAACG,WAAZ,CAXF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BH,IAAI,CAACI,QAAlC,CADF,CAZF,CADgB;AAAA,GAAjB,CADH,CAFF,CADF;AAyBD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Moment from 'react-moment';\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\nimport { Link } from 'react-router-dom';\nimport { confirmAlert } from 'react-confirm-alert';\n\nimport api from '~/services/api';\n\nimport { Container, Task } from './styles';\nimport session from '~/helpers/session';\n\nexport default function Dashboard() {\n\n  const [schedule, setSchedule] = useState([]);\n  const [date] = useState(new Date());\n  const deleteTask = task_id => {\n    alert(task_id);\n  };\n  useEffect(() => {\n    async function loadSchedule() {\n      const header = {\n        headers: session.get(),\n      };\n      const response = await api.get('/tasks', header);\n      session.set(response.headers);\n      setSchedule(response.data);\n    }\n    loadSchedule();\n  }, [date]);\n\n  return (\n    <Container>\n      <Link to=\"/task\">ADICIONAR TAREFA</Link>\n      <ul>\n        {schedule.map(task => (\n          <Task key={task.id}>\n            <header>\n              <title>{task.name}</title>\n              <actions>\n                <FaEdit className=\"edit\" />\n                <button type=\"button\" onClick={deleteTask(task.id)}>\n                  <FaTrash className=\"delete\" />\n                </button>\n              </actions>\n            </header>\n\n            <span>{task.description}</span>\n            <small>\n              <Moment format=\"DD/MM/YYYY\">{task.end_time}</Moment>\n            </small>\n          </Task>\n        ))}\n      </ul>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}