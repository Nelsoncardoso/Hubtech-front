{"ast":null,"code":"import _regeneratorRuntime from \"/Users/nelsoncardoso/Documents/Projects/HubTask/fontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/nelsoncardoso/Documents/Projects/HubTask/fontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/nelsoncardoso/Documents/Projects/HubTask/fontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nelsoncardoso/Documents/Projects/HubTask/fontend/src/pages/Dashboard/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport Moment from 'react-moment';\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\nimport { Link } from 'react-router-dom';\nimport { _ } from 'lodash';\nimport { useSelector, useDispatch } from 'react-redux';\nimport api from \"../../services/api\";\nimport { setTaskData } from \"../../store/modules/task/actions\";\nimport { Container, Task } from './styles';\nimport session from \"../../helpers/session\";\nexport default function Dashboard() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      schedule = _useState2[0],\n      setSchedule = _useState2[1];\n\n  var _useState3 = useState(new Date()),\n      _useState4 = _slicedToArray(_useState3, 1),\n      date = _useState4[0];\n\n  function loadSchedule() {\n    return _loadSchedule.apply(this, arguments);\n  }\n\n  function _loadSchedule() {\n    _loadSchedule = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var dispatch, header, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch = useDispatch();\n              header = {\n                headers: session.get()\n              };\n              _context2.next = 4;\n              return api.get('/tasks', header);\n\n            case 4:\n              response = _context2.sent;\n              session.set(response.headers);\n              setSchedule(response.data);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _loadSchedule.apply(this, arguments);\n  }\n\n  var deleteTask =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(task_id) {\n      var header, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              header = {\n                headers: session.get()\n              };\n              _context.next = 3;\n              return api[\"delete\"](\"/tasks/\".concat(task_id), header);\n\n            case 3:\n              response = _context.sent;\n              session.set(response.headers);\n              loadSchedule();\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function deleteTask(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var editTask = function editTask(task) {\n    dispatch(setTaskData(task));\n  };\n\n  useEffect(function () {\n    loadSchedule();\n  }, [date]);\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/task\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"ADICIONAR TAREFA\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, schedule.map(function (task) {\n    return React.createElement(Task, {\n      key: task.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, task.name), React.createElement(\"actions\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"buton\", {\n      type: \"button\",\n      onClick: function onClick() {\n        return editTask(task);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(FaEdit, {\n      className: \"edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: function onClick() {\n        return deleteTask(task.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(FaTrash, {\n      className: \"delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })))), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, task.description), React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Moment, {\n      format: \"DD/MM/YYYY\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, task.end_time)));\n  })));\n}","map":{"version":3,"sources":["/Users/nelsoncardoso/Documents/Projects/HubTask/fontend/src/pages/Dashboard/index.js"],"names":["React","useState","useEffect","Moment","FaEdit","FaTrash","Link","_","useSelector","useDispatch","api","setTaskData","Container","Task","session","Dashboard","schedule","setSchedule","Date","date","loadSchedule","dispatch","header","headers","get","response","set","data","deleteTask","task_id","editTask","task","map","id","name","description","end_time"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Moment from 'react-moment';\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\nimport { Link } from 'react-router-dom';\nimport { _ } from 'lodash';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport api from '~/services/api';\nimport { setTaskData } from '~/store/modules/task/actions';\n\n\nimport { Container, Task } from './styles';\nimport session from '~/helpers/session';\n\nexport default function Dashboard() {\n\n  const [schedule, setSchedule] = useState([]);\n  const [date] = useState(new Date());\n\n  async function loadSchedule() {\n    const dispatch = useDispatch();\n    const header = {\n      headers: session.get(),\n    };\n    const response = await api.get('/tasks', header);\n    session.set(response.headers);\n    setSchedule(response.data);\n  }\n  const deleteTask = async task_id => {\n    const header = {\n      headers: session.get(),\n    };\n    const response = await api.delete(`/tasks/${task_id}`, header);\n    session.set(response.headers);\n    loadSchedule();\n  };\n\n  const editTask = (task) => {\n    dispatch(setTaskData(task))\n  }\n\n  useEffect(() => {\n    loadSchedule();\n  }, [date]);\n\n  return (\n    <Container>\n      <Link to=\"/task\">ADICIONAR TAREFA</Link>\n      <ul>\n        {schedule.map(task => (\n          <Task key={task.id}>\n            <header>\n              <title>{task.name}</title>\n              <actions>\n                <buton type=\"button\" onClick={() => editTask(task)}>\n                  <FaEdit className=\"edit\" />\n                </buton>\n                <button type=\"button\" onClick={() => deleteTask(task.id)}>\n                  <FaTrash className=\"delete\" />\n                </button>\n              </actions>\n            </header>\n\n            <span>{task.description}</span>\n            <small>\n              <Moment format=\"DD/MM/YYYY\">{task.end_time}</Moment>\n            </small>\n          </Task>\n        ))}\n      </ul>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}