{"ast":null,"code":"import _slicedToArray from \"/Users/nelsoncardoso/Downloads/bootcamp-gobarber-frontend-master/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nelsoncardoso/Downloads/bootcamp-gobarber-frontend-master/src/pages/Dashboard/index.js\";\nimport React, { useState, button, useEffect } from 'react';\nimport api from \"../../services/api\";\nimport { Container, Time } from './styles';\nexport default function Dashboard() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        schedule = _useState2[0],\n        setSchedule = _useState2[1];\n\n  const _useState3 = useState(new Date()),\n        _useState4 = _slicedToArray(_useState3, 1),\n        date = _useState4[0];\n\n  useEffect(() => {\n    async function loadSchedule() {\n      const response = await api.get('/tasks');\n      api.defaults.headers = response.headers;\n      setSchedule(response.data);\n    }\n\n    loadSchedule();\n  }, [date]);\n\n  function AddTask() {}\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"Button\",\n    onClick: AddTask,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"ADICIONAR TAREFA\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, schedule.map(task => React.createElement(Time, {\n    key: task.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, task.name), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, task.description), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, task.end_time)) // <Time key={time.time} past={time.past} available={!time.appointment}>\n  //   <strong>{time.time}</strong>\n  //   <span>\n  //     {time.appointment ? time.appointment.user.name : 'Em aberto'}\n  //   </span>\n  // </Time>\n  )));\n}","map":{"version":3,"sources":["/Users/nelsoncardoso/Downloads/bootcamp-gobarber-frontend-master/src/pages/Dashboard/index.js"],"names":["React","useState","button","useEffect","api","Container","Time","Dashboard","schedule","setSchedule","Date","date","loadSchedule","response","get","defaults","headers","data","AddTask","map","task","id","name","description","end_time"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,UAAhC;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA,oBACFN,QAAQ,CAAC,EAAD,CADN;AAAA;AAAA,QAC3BO,QAD2B;AAAA,QACjBC,WADiB;;AAAA,qBAEnBR,QAAQ,CAAC,IAAIS,IAAJ,EAAD,CAFW;AAAA;AAAA,QAE3BC,IAF2B;;AAIlCR,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeS,YAAf,GAA8B;AAC5B,YAAMC,QAAQ,GAAG,MAAMT,GAAG,CAACU,GAAJ,CAAQ,QAAR,CAAvB;AACAV,MAAAA,GAAG,CAACW,QAAJ,CAAaC,OAAb,GAAuBH,QAAQ,CAACG,OAAhC;AACAP,MAAAA,WAAW,CAACI,QAAQ,CAACI,IAAV,CAAX;AACD;;AACDL,IAAAA,YAAY;AACb,GAPQ,EAON,CAACD,IAAD,CAPM,CAAT;;AASA,WAASO,OAAT,GAAmB,CAAE;;AAErB,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEA,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,QAAQ,CAACW,GAAT,CAAaC,IAAI,IAChB,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASD,IAAI,CAACE,IAAd,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,IAAI,CAACG,WAAZ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQH,IAAI,CAACI,QAAb,CAHF,CADgB,CAMhB;AACA;AACA;AACA;AACA;AACA;AAXD,GADH,CAHF,CADF;AAqBD","sourcesContent":["import React, { useState, button, useEffect } from 'react';\n\nimport api from '~/services/api';\n\nimport { Container, Time } from './styles';\n\nexport default function Dashboard() {\n  const [schedule, setSchedule] = useState([]);\n  const [date] = useState(new Date());\n\n  useEffect(() => {\n    async function loadSchedule() {\n      const response = await api.get('/tasks');\n      api.defaults.headers = response.headers;\n      setSchedule(response.data);\n    }\n    loadSchedule();\n  }, [date]);\n\n  function AddTask() {}\n\n  return (\n    <Container>\n      <button type=\"Button\" onClick={AddTask}>ADICIONAR TAREFA</button>\n\n      <ul>\n        {schedule.map(task => (\n          <Time key={task.id}>\n            <strong>{task.name}</strong>\n            <span>{task.description}</span>\n            <small>{task.end_time}</small>\n          </Time>\n          // <Time key={time.time} past={time.past} available={!time.appointment}>\n          //   <strong>{time.time}</strong>\n          //   <span>\n          //     {time.appointment ? time.appointment.user.name : 'Em aberto'}\n          //   </span>\n          // </Time>\n        ))}\n      </ul>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}